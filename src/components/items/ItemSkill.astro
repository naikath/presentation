---
import skillItems from '../../data/skills/items.json';
import Icon from './Icon.astro';
import ItemDescription from './ItemDescription.astro';

// The skill name and descriptions are separated
// This part is static and is run at build time
// to be able to interpolate values in the component
// The dynamic part that requires JS is separated
---

<div class='card-skill'>
	<h2>Skills</h2>
	<section>
		<h3>JS</h3>
		<div class='icon-grid'>
			{
				skillItems.map(skill => {
					return <Icon skill={skill} />;
				})
			}
		</div>
	</section>

	<ItemDescription />
</div>

<style>
	.card-skill {
		--spacing: 0.5rem;
		display: flex;
		flex-direction: column;
		gap: 1rem;
		text-align: center;
	}

	h2 {
		font-size: 2rem;
	}

	/* SKILL SECTION */

	section {
		display: flex;
		flex-direction: column;
		gap: var(--spacing);
		border: 3px dotted white;
		padding: var(--spacing);
	}

	h3 {
		font-size: 1.5rem;
	}

	.icon-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(60px, 1fr));
		justify-content: right;
		gap: var(--spacing);
	}
</style>

<script>
	import skillDescriptions from './../../data/skills/descriptions.json';

	// add event listeners to the items
	// so when clicked, they select the description and set the content to the description object of the list

	const card = document.querySelector('.card-skill');
	const itemList = card.querySelectorAll('.icon') as NodeListOf<HTMLElement>;
	const itemDescription = card.querySelector('.description') as HTMLElement;

	const descriptionParts = {
		img: itemDescription.querySelector('img') as HTMLImageElement,
		title: itemDescription.querySelector('.title') as HTMLElement,
		content: itemDescription.querySelector('.content') as HTMLElement,
		button: itemDescription.querySelector('button') as HTMLButtonElement,
	};

	descriptionParts.button.addEventListener('click', () => {
		itemDescription.classList.remove('show');
	});

	function getItemDesc(id: number | string) {
		if (typeof id === 'string') id = Number.parseInt(id);
		return skillDescriptions.find(skill => skill.id === id).description;
	}

	itemList.forEach(item => {
		item.addEventListener('click', () => {
			descriptionParts.img.src = item.dataset.img;
			descriptionParts.img.alt = `${item.dataset.name} icon`;
			descriptionParts.title.innerText = item.dataset.name;

			const description = getItemDesc(item.dataset.id);
			descriptionParts.content.innerText = description;

			itemDescription.classList.add('show');
		});
	});
</script>
