---
import { getUiData, getLangFromUrl } from '../../../utils/languages';
const ui = await getUiData(getLangFromUrl(Astro.url));
---

<div class='skills__display'>
	<article class='skills__explain'>
		<h3>{ui.skills.display}</h3>
		<p class='content'>{ui.skills.explanation}</p>
	</article>
	<article class='skills__description'>
		<header>
			<div class='icon'>
				<img
					src=''
					alt='Icon'
					width='40'
					height='40'
				/>
			</div>
			<h3 class='title'>Title</h3>
		</header>
		<p class='definition'>
			<!-- Short Definition -->
		</p>
		<div class='content'>
			<!-- Description -->
		</div>
		<button>Ã—</button>
	</article>
</div>

<style>
	.skills__display {
		--color-skills-display: hsla(231, 48%, 45%, 0.6);
		position: relative;
		height: 100%;
	}

	/*
	
	States:
	Default
	explain: visible
	description: invisible
	
	Showing
	explain: invisible
	description: visible

	visible:
	position:relative
	opacity:1
	
	invisible:
	position:absolute
	opacity:0

	*/

	article {
		display: flex;
		position: relative;
		flex-direction: column;
		gap: 0.5em;
		transition: opacity 0.3s ease-out;
		border-radius: 1rem;
		background-color: var(--color-skills-display);
		padding: 0.7rem;
		width: 100%;
		font-size: 1.5rem;
		text-align: start;
	}

	/* STATES HIDING SHOWING */

	.skills__display {
		& .skills__explain {
			position: relative;
			opacity: 1;
			z-index: 10;
		}

		& .skills__description {
			position: absolute;
			top: 0;
			opacity: 0;
			z-index: 0;
		}
	}

	.skills__display--show {
		& .skills__explain {
			position: absolute;
			top: 0;
			opacity: 0;
			z-index: 0;
		}

		& .skills__description {
			position: relative;
			opacity: 1;
			z-index: 10;
		}
	}

	/* DESCRIPTION TITLE */

	.icon {
		display: grid;
		place-content: center;
		border-radius: 25%;
		background: radial-gradient(hsl(0, 0%, 100%, 0.75), 30%, transparent);
		padding: 0.6rem;
		aspect-ratio: 1;
	}

	img {
		filter: drop-shadow(0 0 1px hsl(0, 0%, 0%, 0.8));
		border-radius: 0.5rem;
		width: 40px;
		height: 40px;
		object-fit: contain;
	}

	header {
		display: flex;
		flex-wrap: wrap;
		align-items: center;
		gap: 0.4em;
		max-width: 85%;
	}

	/* DESCRIPTION DEFINITION SUBTITLE */

	.definition {
		font-style: italic;
	}

	/* CLOSE BUTTON */

	button {
		--button-opacity: 0.3;
		position: absolute;
		top: 0;
		right: 0;
		border-top-right-radius: inherit;
		border-bottom-left-radius: 0.2rem;
		background-color: hsl(0, 0%, 0%, var(--button-opacity));
		padding: 0.3rem;
		aspect-ratio: 1;
		width: 2.4rem;
		font-size: 1.4rem;
	}

	button:hover {
		--button-opacity: 0.7;
	}
</style>

<style is:global>
	/* 
		this cant be local to the Astro component
		since the tags used are inserted dinamically
		so they dont have the attribute that Astro would use to style it
	*/

	/* DESCRIPTION CONTENT */

	.skills__description {
		.content p {
			padding: 0.5em 0;
		}

		.content code {
			border-radius: 0.3em;
			background-color: hsl(0, 0%, 0%, 0.25);
			padding: 0 0.3em;
			font-family: 'Courier New', Courier, monospace;
		}
	}
</style>
