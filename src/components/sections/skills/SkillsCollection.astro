---
import SkillsGroup from './SkillsGroup.astro';
import { getUiData, getLangFromUrl, getItemsData } from '../../../utils/languages';

const ui = await getUiData(getLangFromUrl(Astro.url));
const skillsItemsData = await getItemsData(getLangFromUrl(Astro.url));
---

<div class='skills__collection'>
	<h2>{ui.skills.title}</h2>
	{
		skillsItemsData.map(itemGroup => {
			return <SkillsGroup itemGroup={itemGroup} />;
		})
	}
</div>

<style>
	.skills__collection {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		text-align: center;
	}

	h2 {
		font-size: 2rem;
	}
</style>

<script>
	import { getDescriptions, getLangFromUrl } from '../../../utils/languages';
	const skillsData = await getDescriptions(getLangFromUrl(window.location.href));

	// add event listeners to the items
	// so when clicked, they select the description and set the content to the description object of the list

	const skillsIcons = document.querySelectorAll('.skills__icon') as NodeListOf<HTMLElement>;
	const skillsDisplay = document.querySelector('.skills__display') as HTMLElement;

	const skillsDescriptionElement = document.querySelector('.skills__description') as HTMLElement;
	const skillsDescription = {
		img: skillsDescriptionElement.querySelector('img') as HTMLImageElement,
		title: skillsDescriptionElement.querySelector('.title') as HTMLElement,
		definition: skillsDescriptionElement.querySelector('.definition') as HTMLElement,
		content: skillsDescriptionElement.querySelector('.content') as HTMLElement,
		button: skillsDescriptionElement.querySelector('button') as HTMLButtonElement,
	};

	function skillsShowDescription(show: boolean) {
		skillsDisplay.classList.toggle('skills__display--show', show);
	}

	skillsDescription.button.addEventListener('click', () => {
		skillsShowDescription(false);
		skillsDescription.content.innerText = '';
		skillsDescription.definition.innerText = '';
	});

	type ItemId = number | string | undefined;
	type ItemData = 'definition' | 'description';
	function getItemData(id: ItemId, itemDataName: ItemData) {
		if (id === undefined) return;
		if (typeof id === 'string') id = Number.parseInt(id);
		const itemData = skillsData.find(skill => skill.id === id);
		if (itemDataName === 'definition') return itemData?.definition;
		if (itemDataName === 'description') return itemData?.description;
	}

	skillsIcons.forEach(item => {
		item.addEventListener('click', () => {
			const { img, title, definition, content } = skillsDescription;
			const { img: dataImg, name: dataName, id: dataId } = item.dataset;

			img.src = `${dataImg}`;
			img.alt = `${dataName} icon`;
			title.innerText = `${dataName}`;

			definition.innerText = getItemData(dataId, 'definition') ?? '';
			content.innerHTML = getItemData(dataId, 'description') ?? '';

			skillsShowDescription(true);
		});
	});
</script>
