---
import OptLang from './OptLang.astro';
import OptTheme from './OptTheme.astro';
import OptAnim from './OptAnim.astro';
import IconGear from './IconGear.astro';
---

<section class='options'>
	<div class='options__content'>
		<h2>Options</h2>
		<hr class='title' />
		<OptLang />
		<hr class='option' />
		<OptTheme />
		<hr class='option' />
		<OptAnim />
		<hr class='option' />
	</div>
	<button class='options__icon'>
		<IconGear />
	</button>
</section>

<style>
	.options {
		position: absolute;
		top: 0;
		right: 0;
		z-index: 20;
		margin: 1rem;
	}

	.options__icon {
		display: grid;
		position: relative;
		place-content: center;
		transition:
			color 0.15s,
			background-color 0.15s;
		border: 2px solid white;
		border-radius: 1rem;
		background-color: black;
		aspect-ratio: 1;
		width: 3em;
		color: white;
	}

	.options__icon:hover {
		border-width: 4px;
	}

	.options__icon:active {
		background-color: white;
		color: black;
	}

	h2 {
		margin-bottom: 0.5em;
		margin-left: 1em;
	}

	hr {
		margin-block: 0.75em;
		border-style: dashed;
	}

	hr.title {
		width: 75%;
	}

	hr.option {
		margin-inline: auto;
		width: 90%;
	}

	.options__content {
		position: absolute;
		top: 0;
		right: 0;
		backdrop-filter: blur(1.5rem);
		background-color: hsla(0, 0%, 0%, 0.75);
		width: 200px;
		height: 700px;
		/*
			clip-path will still be used when not animating
			to avoid this sidebar overlapping other elements 
			but wont be shown, so its time and delays
			will be longer than the actual transition used 
		*/
		/* properties from showing to hiding */
		/* when not animating */
		--clip-size: 0%;
		--duration-opacity: 0.5s;
		--duration-clip-path: 0s;
		--delay-clip-path: 0.5s; /* should equal the duration of opacity */
		opacity: 0;
		clip-path: circle(var(--clip-size) at 100% 0%);
		transition:
			opacity var(--duration-opacity) ease-out,
			clip-path var(--duration-clip-path) ease-out var(--delay-clip-path);
		border-radius: 1rem;
		padding: 1rem 1.5rem;
	}

	.options--animate .options__content {
		/* properties from showing to hiding */
		/* when animating */
		--duration-opacity: 1s;
		--duration-clip-path: 0.5s;
		--delay-clip-path: 0s;
	}

	.options--show .options__content {
		/* properties from hiding to showing */
		/* when not animating */
		--clip-size: 150%;
		--duration-opacity: 0.5s;
		--delay-clip-path: 0s;
		opacity: 1;
	}

	.options--show.options--animate .options__content {
		/* properties from hiding to showing */
		/* when animating */
		--duration-opacity: 1s;
	}
</style>

<script>
	const options = {
		element: document.querySelector('.options') as HTMLElement,
		icon: document.querySelector('.options__icon') as HTMLElement,
		content: document.querySelector('.options__content') as HTMLElement,
	};

	options.icon?.addEventListener('click', () => {
		options.element.classList.toggle('options--show');
	});
</script>
