[{"id":101,"definition":"Markup language for the structure of the web","description":"\nI've knowledge of the variety of HTML tags and I'm able to structure webs using semantic tags\n"},{"id":102,"definition":"Styling language for the web","description":"\nI have experience using multiple of the available properties\nCreating layouts using both flexbox and grid\nBut still I have some difficulty for the initial design of a webpage\n\nI frequently experiment with gradients, transitions, transforms, and less often things like `:has`, `:is`, and `:where` selectors, and scroll snapping when useful\nWhen encounter a problem I use different strategies and some visual tricks until achieving the look i want\n\nI always try to make my pages responsive\nOr at least viewable in all devices until I can polish the details\n"},{"id":103,"definition":"Native programming language for the web","description":"\nI can easily find my way in the language and through pretty much any problem I encounter\nExperience dealing with its quirks, like implicit castings, and use of different data types like Set and Map\nI can use it to manipulate the DOM, get resources from a server, execute tasks at a set time, create events and more\n"},{"id":104,"definition":"Library for designing user interfaces","description":"\nThis is the first UI framework I'm learning\nI don't know everything yet but I like the use of components and how it manages state\nI'm little by little improving in the use of hooks and learning more about how to structure my projects\t\t\n"},{"id":105,"definition":"Framework for styling with utility classes","description":"\nI've recently been learning this technology and it's easier than it seems\nI don't have much experience but I've been using it more and improving easily because of my knowledge of vanilla CSS\n"},{"id":106,"definition":"Library for designing using pre-made components","description":"\nOkay in this one I have really low experience\nI used very few times, but I was still capable of getting the website to look nice\nI wouldn't choose, since I like to customize almost everything, but I still understand it's column system, and it's components really help simplify stuff in multiple cases\nSo I would still be able to use it if I need to\n"},{"id":107,"definition":"Framework to build web pages UI agnostic","description":"\nThis is currently my default choice when deciding to build a page\nIt's pretty simple, which works since I don't always need a lot of interactivity\nAnd also it's very similar to HTML, which makes it very intuitive\nAlso, being UI agnostic, I can start with this and then incorporate any library of my preference\n"},{"id":201,"definition":"Runtime to execute JS","description":"\nI can setup my projects, manage asynchrony, import packages and modules\nI have some practice in Node built in packages like `node:path`, `node:fs` and even `node:test`\nSometimes I even resolve completely unrelated problems by writing and executing a script with Node\t\t\n"},{"id":202,"definition":"Superset of JS with static typing during development","description":"\nI usually include typescript in my projects every time I can, or failing that, JSDoc with TS declaration files\nI don't have very complex knowledge but I can use utility types, and create my own types and templates\nI could write my own config files but usually let the framework that I'm using to do it for me\nIt's annoying at certain times, like wrong inferences, but still makes everything so much easier\t\t\n"},{"id":203,"definition":"Minimalist framework for creating web applications","description":"\nI can create a REST API, with url params to filter results\nStructure project using MVC architecture\nUse it to host my client files, created with some framework with Astro or React\n"},{"id":204,"definition":"Library with an SQL like API and type safe","description":"\nAt the moment this is my preferred ORM to access databases in my projects\nI'm gaining practice and it facilitates obtaining data by having a defined typing\n"},{"id":205,"definition":"Package for validating schemas and static typing","description":"\nI started using it shortly ago, it facilitates a lot managing the received data integrity\nPlus providing typing for the validated schemas\n"},{"id":206,"definition":"Testing framework that can be used along Vite","description":"\nI recently started writing some tests with it when developing code and was actually helpful\nI hadn't tried TDD before, but doing it helped me develop functions otherwise I wouldn't have know how to start\nSo I'm able to, test by test, make sure everything works\n\nCurrently I can do unit tests, but don't have too much experience with integration or end to end ones\nspecially when it involves mocking resources\n"},{"id":301,"definition":"Shell scripting language","description":"\nI don't have much experience but I often find myself creating my own scripts when I need them\nIt's definitely not my favorite thing, but when a problem appears I can overcome it with a solution in just a few hours\nI'm not scared to jump into configurations of CLI programs like neovim or tmux\nI end up having lot of aliases or bash functions to use frequently\n"},{"id":302,"definition":"Open source operating system","description":"\nI usually choose this system when I got the chance and understand it's general functioning\nI'm used to work with file related Unix or GNU tools\nI can look for, manage and install packages and applications\nI got experience mainly with Debian based distros\n"},{"id":303,"definition":"SQL database stored in a file","description":"\nI've knowledge of the SQL language, and since I don't do really complex stuff, I'm not bothered by the limitations of this particular engine\nI query data, filter it, group it, and in cases transform it with functions, apart of using subqueries and common joins\nAnd by its simplicity to be included in a project is what I like to use the most\n"},{"id":304,"definition":"SQL database system in a server","description":"\nI can use it as any other SQL engine, also managing it's users and hosts\nBut by not having where to host it and requiring more configurations I don't have much practice\n"},{"id":401,"definition":"Version control tool","description":"\nI can use local and remote repositories, create branches, do commits, merges and rebases\nI know its different parts, and constantly move the files through them, changing their states in turn\n\nI use this tool frequently and I like nothing more than gaining practice with it, it has helped me in so many ways\nI've never had so much confidence while developing a project that the more I use its functionality\nAnd even those couple of times I made a mistake, I could learn to revert it easily\n\nI create local branches when developing each feature, to later be rebased and merged fast forward to the main branch\nIn addition to also saving certain changes locally in stash\nFor the format of the commits I use conventional commits\n"},{"id":402,"definition":"Webpage to share and host code","description":"\nI started creating and uploading my own projects to this platform\nI didn't have the opportunity to participate in group works yet\nI use the feature of Github Pages to host static pages like this one\nAnd lately I even learned to use SSH and GPG keys for some reason\n"},{"id":403,"definition":"Low level programming language","description":"\nI'm pretty far from being an expert, but I know the fundamentals about typing, structs and use of pointers\nWhich has really made easier the learning of new languages and concepts, since I could apply that knowledge, adapting it at certain points\n"},{"id":404,"definition":"Platform for programming microcontrollers or Arduino boards with C++","description":"\nDuring Highschool I made numerous small projects and exercises in arduino with its libraries\nIt was my first experience with programming, where I learned the basics of C++\nI really enjoyed looking the documentation and learning something new I could use each day\nThis helped me enter this world in a fun and interactive way\n"}]